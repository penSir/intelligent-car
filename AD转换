#include<reg52.h>
#include<intrins.h>
#define PCF 0x90
#define EN 0x40

typedef unsigned char uchar;
typedef unsigned int uint;

sbit sda=P2^0;
sbit scl=P2^1;
sbit du=P2^6;
sbit we=P2^7;
sbit led1=P1^0;
sbit led2=P1^1;
sbit beep=P2^3;

uchar ad_value;

uchar code table[]={
0x3F, 0x06, 0x5B, 0x4F, 
0x66, 0x6D, 0x7D, 0x07, 
0x7F, 0x6F, 0x77, 0x7C, 
0x39, 0x5E, 0x79, 0x71};

void delay()
{
	_nop_();
}

void delayms(uint xms)
{
	uint i,j;
	for(i=xms;i>0;i--)
		for(j=114;j>0;j--);
}

void display(uint value)
{
	du=0;
	P0=table[value/100];
	du=1;
	du=0;
	
	we=0;
	P0=0xfe;
	we=1;
	we=0;
	delayms(5);
	
	du=0;
	P0=table[value%100/10];
	du=1;
	du=0;
	
	we=0;
	P0=0xfd;
	we=1;
	we=0;
	delayms(5);

	du=0;
	P0=table[value%10];
	du=1;
	du=0;
	
	we=0;
	P0=0xfb;
	we=1;
	we=0;
	delayms(5);

}
//总线初始化
void init()
{
	sda=1;
	_nop_();
	scl=1;
	_nop_();
}
//起始信号
void start()
{
	scl=1;
	_nop_();
	sda=1;
	delay();
	sda=0;
	delay();
}
//停止信号
void stop()
{
	sda=0;
	_nop_();
	scl=1;
	delay();
	sda=1;
	delay();
}
//主机发送应答
void master_ack(bit i)
{
	scl=0;
	_nop_();
	if(i)
		sda=0;
	else
		sda=1;
	_nop_();
	scl=1;
	_nop_();
	scl=0;
	_nop_();
	sda=1;
	_nop_();
}
//检测从机应答
bit test_ack()
{
	scl=1;
	delay();
	if(sda)
	{
		scl=0;
		stop();
		return 0;
	}
	else
	{
		scl=0;
		return 1;
	}
}
//写字节
void write_byte(uchar byte)
{
	uchar i,temp;
	temp=byte;
	for(i=0;i<8;i++)
	{
		temp<<=1;
		scl=0;
		_nop_();
		sda=CY;
		_nop_();
		scl=1;
		_nop_();
	}
	scl=0;
	_nop_();
	sda=1;
	_nop_();
}
//读字节
uchar read_byte()
{
	uchar i,k;
	scl=0;
	_nop_();
	sda=1;
	_nop_();
	for(i=0;i<8;i++)
	{
		scl=1;
		_nop_();
		k=(k<<1)|sda;
		scl=0;
		_nop_();
	}
	_nop_();
	return k;
}
//DAC输出
bit dac_out(uchar dat)
{
	start();
	write_byte(0x90);
	if(!test_ack())
		return 0;
	write_byte(EN);
	if(!test_ack())
		return 0;
	write_byte(dat);
	if(!test_ack())
		return 0;
	stop();
	return 1;
}
//读AD数据
bit adc_read(uchar cmd)
{
	start();
	write_byte(0x90+0);
	if(!test_ack())
		return 0;
	write_byte(cmd);
	master_ack(0);
	start();
	write_byte(0x90+1);
	if(!test_ack())
		return 0;
	ad_value=read_byte();
	master_ack(0);
	stop();
	return 1;
}

void main()
{
	init();
	while(1)
	{
		if(adc_read(0x02))
			led1=0;
		else
			led1=1;
		if(dac_out(ad_value))
			led2=0;
		else
			led2=1;
		display(ad_value);
		if(ad_value>150)
			beep=0;
		else
			beep=1;
		delayms(5);
	}
}


















































































